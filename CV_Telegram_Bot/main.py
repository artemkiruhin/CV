import telebot
from telebot import types
from mysql.connector import connect, Error
import bot_settings

users = bot_settings.users
buttons_stack = []
bot = telebot.TeleBot(bot_settings.token)

@bot.message_handler(commands=['start'])
def url(message):
    if IsMyUserId(message.from_user.id):
        murkup = MainChatMurkup()
        bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫!", reply_markup=murkup)
    else:
        ResposeToNotMyId(message)

@bot.message_handler(func=lambda m: m.text == '–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è')
def check(message):
    if IsMyUserId(message.from_user.id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back_button = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
        markup.add(back_button)

        buttons_stack.append(markup)

        feedbacks = GetNewFeedbacks()

        bot.send_message(message.chat.id, feedbacks, reply_markup=markup)
    else:
        ResposeToNotMyId(message)

@bot.message_handler(func=lambda m: m.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è')
def back(message):
    murkup = MainChatMurkup()
    bot.send_message(message.chat.id, "–í–µ—Ä–Ω—É–ª–∏—Å—å", reply_markup=murkup)

def IsMyUserId(id):
    for u in users:
        if id == u:
            return True
    return False

def ResposeToNotMyId(message):
    murkup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    bot.send_message(message.chat.id, '–Ø –≤–∞–º –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–≤–µ—á—É, –≤—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!', reply_markup=murkup)

def GetNewFeedbacks():
    try:
        with connect(
                host="localhost",
                user='root',
                password='root',
                database='cv_database') as connection:
            print(connection)
            query = 'SELECT * FROM Feedbacks'
            cursor = connection.cursor()
            cursor.execute(query)  # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            feedbacks = cursor.fetchall()
            message = ''
            for f in feedbacks:
                message += f'ID: {f[0]}\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {f[1]}\n–°–æ–æ–±—â–µ–Ω–∏–µ: {f[3]}\n\n\n'
            return message

    except Error as e:
        print(e)

def MainChatMurkup():
    murkup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    checkNewFeedbackButton = types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è')
    murkup.add(checkNewFeedbackButton)
    return murkup

bot.polling(none_stop=True, interval=0) #–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å

